'use client';\n\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Loader2 } from 'lucide-react';\n\ninterface User {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  role: string;\n}\n\ninterface ProfileFormProps {\n  user: User;\n}\n\nexport function ProfileForm({ user }: ProfileFormProps) {\n  const [firstName, setFirstName] = useState(user.firstName || '');\n  const [lastName, setLastName] = useState(user.lastName || '');\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleUpdateProfile = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(null);\n    setSuccess(null);\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('/api/auth/update-profile', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ firstName, lastName }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Something went wrong');\n      }\n\n      setSuccess('Profile updated successfully');\n    } catch (error) {\n      if (error instanceof Error) {\n        setError(error.message);\n      } else {\n        setError('An error occurred. Please try again.');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleUpdatePassword = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(null);\n    setSuccess(null);\n\n    if (newPassword !== confirmPassword) {\n      setError('New passwords do not match');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('/api/auth/change-password', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ currentPassword, newPassword }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Something went wrong');\n      }\n\n      setSuccess('Password updated successfully');\n      setCurrentPassword('');\n      setNewPassword('');\n      setConfirmPassword('');\n    } catch (error) {\n      if (error instanceof Error) {\n        setError(error.message);\n      } else {\n        setError('An error occurred. Please try again.');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {error && (\n        <Alert variant=\"destructive\">\n          <AlertDescription>{error}</AlertDescription>\n        </Alert>\n      )}\n      {success && (\n        <Alert>\n          <AlertDescription>{success}</AlertDescription>\n        </Alert>\n      )}\n\n      <Card>\n        <CardHeader>\n          <CardTitle>General Information</CardTitle>\n          <CardDescription>\n            Update your personal information.\n          </CardDescription>\n        </CardHeader>\n        <form onSubmit={handleUpdateProfile}>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input id=\"email\" value={user.email} disabled />\n              <p className=\"text-sm text-muted-foreground\">\n                Your email cannot be changed.\n              </p>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"firstName\">First Name</Label>\n                <Input\n                  id=\"firstName\"\n                  value={firstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"lastName\">Last Name</Label>\n                <Input\n                  id=\"lastName\"\n                  value={lastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                />\n              </div>\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"role\">Role</Label>\n              <Input id=\"role\" value={user.role} disabled />\n            </div>\n          </CardContent>\n          <CardFooter>\n            <Button type=\"submit\" disabled={isLoading}>\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Saving...\n                </>\n              ) : (\n                'Save Changes'\n              )}\n            </Button>\n          </CardFooter>\n        </form>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Change Password</CardTitle>\n          <CardDescription>\n            Update your password to keep your account secure.\n          </CardDescription>\n        </CardHeader>\n        <form onSubmit={handleUpdatePassword}>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"currentPassword\">Current Password</Label>\n              <Input\n                id=\"currentPassword\"\n                type=\"password\"\n                value={currentPassword}\n                onChange={(e) => setCurrentPassword(e.target.value)}\n                required\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"newPassword\">New Password</Label>\n              <Input\n                id=\"newPassword\"\n                type=\"password\"\n                value={newPassword}\n                onChange={(e) => setNewPassword(e.target.value)}\n                required\n                minLength={8}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"confirmPassword\">Confirm New Password</Label>\n              <Input\n                id=\"confirmPassword\"\n                type=\"password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                required\n                minLength={8}\n              />\n            </div>\n          </CardContent>\n          <CardFooter>\n            <Button type=\"submit\" disabled={isLoading}>\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Updating...\n                </>\n              ) : (\n                'Update Password'\n              )}\n            </Button>\n          </CardFooter>\n        </form>\n      </Card>\n    </div>\n  );\n}\n"